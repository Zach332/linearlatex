{"version":3,"sources":["math.js","Matrix.js","InputMatrix.js","Operation.js","Operations.js","Latex.js","State.js","App.js","reportWebVitals.js","index.js"],"names":["frac","input","isLetter","slice","variable","length","parts","split","parseInt","mult","i1","i2","newFrac","simplify","add","display","min","Math","abs","i","char","match","Matrix","matrix","map","row","className","num","style","width","InputMatrix","setMatrix","React","useState","keys","setKeys","rows","setRows","cols","setCols","useEffect","newKeys","newMat","thisRow","thisNewMatRow","j","push","updateMatrix","event","keyArr","target","getAttribute","value","x","key","y","onChange","placeholder","index","defaultValue","Operation","operation","setOperation","updateNext","showMatrix","updateOperation","prevMatrix","startRow","multiplier","otherRow","operationDetails","type","Number","isInteger","newMatrix","console","log","row1","JSON","parse","stringify","row2","adjustStartRow","adjustMultiplier","adjustOtherRow","inc","Operations","operations","setOperations","oldOperations","concat","newOperation","Latex","latex","setLatex","newLatex","getInitialMatrix","getOpLatex","getSystemLatex","error","opLatex","ldisplay","first","display1","whiteSpace","textAlign","onClick","navigator","clipboard","writeText","href","matrixPersistenceKey","operationsPersistenceKey","firstOperationsState","firstMatrixState","App","matrixFromStorage","localStorage","getItem","matrixObject","getMatrix","operationsFromStorage","operationsObject","getOperations","setItem","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa64b08c.chunk.js","sourcesContent":["export const frac = (input) => {\r\n    if(isLetter(input.slice(-1))) {\r\n        var variable = input.slice(-1);\r\n        if(input.length == 1) {\r\n            return [0, 1, [[1, 1], variable]];\r\n        }\r\n        var parts = input.slice(0,input.length - 1).split(\"/\");\r\n        var num = parseInt(parts[0]);\r\n        var den = parts.length > 1?parseInt(parts[1]):1;\r\n        return [0, 1, [[num,den], variable]];\r\n    }\r\n    if(input == \"\")return [0,1];\r\n    var parts = input.split(\"/\");\r\n    var num = parseInt(parts[0]);\r\n    var den = parts.length > 1?parseInt(parts[1]):1;\r\n    return [num, den];\r\n}\r\n\r\nexport const mult = (i1, i2) => {\r\n    if(i1.length > 2) {\r\n        var newFrac = [i1[0] * i2[0], i1[1] * i2[1], [[i1[2][0][0] * i2[0], i1[2][0][1] * i2[1]], i1[2][1]]];\r\n        return simplify(newFrac);\r\n    } else if (i2.length > 2) {\r\n        var newFrac = [i1[0] * i2[0], i1[1] * i2[1], [[i2[2][0][0] * i1[0], i2[2][0][1] * i1[1]], i2[2][1]]];\r\n        return simplify(newFrac);\r\n    }\r\n    var newFrac = [i1[0] * i2[0], i1[1] * i2[1]];\r\n    return simplify(newFrac);\r\n}\r\n\r\nexport const add = (i1, i2) => {\r\n    if(i1.length > 2) {\r\n        var newFrac = [(i1[0] * i2[1]) + (i2[0] * i1[1]), i1[1] * i2[1], [[i1[2][0][0], i1[2][0][1]], i1[2][1]]];\r\n        return simplify(newFrac);\r\n    } else if (i2.length > 2) {\r\n        var newFrac = [(i1[0] * i2[1]) + (i2[0] * i1[1]), i1[1] * i2[1], [[i2[2][0][0], i2[2][0][1]], i2[2][1]]];\r\n        return simplify(newFrac);\r\n    }\r\n    var newFrac = [(i1[0] * i2[1]) + (i2[0] * i1[1]), i1[1] * i2[1]];\r\n    return simplify(newFrac);\r\n}\r\n\r\nexport const display = (frac) => {\r\n    if(frac == null)return \"\";\r\n    if(frac.length > 2) {\r\n        if(frac[0] == 0) {\r\n            return display(frac[2][0]) + frac[2][1];\r\n        } else {\r\n            return display(frac.slice(0,2)) + \" + \" + display(frac[2][0]) + frac[2][1];\r\n        }\r\n    }\r\n    if(frac[1] == 1) {\r\n        return frac[0];\r\n    } else {\r\n        return frac[0] + \"/\" + frac[1];\r\n    }\r\n}\r\n\r\nconst simplify = (frac) => {\r\n    if(frac[0] == 0) {\r\n        frac[1] = 1;\r\n        return frac;\r\n    }\r\n    var min = Math.min(Math.abs(frac[0]), Math.abs(frac[1]));\r\n    for(var i = 2; i <= min; i++) {\r\n        if((frac[0] / i) % 1 == 0 && (frac[1] / i) % 1 == 0) {\r\n            frac[0] /= i;\r\n            frac[1] /= i;\r\n            i--;\r\n        }\r\n    }\r\n    return frac;\r\n}\r\n\r\nconst isLetter = (char) => {\r\n    return char.match(/[a-z]/i);\r\n}","import React from 'react'\r\nimport { display } from './math'\r\n\r\nexport default function Matrix( { matrix }) {\r\n    return (\r\n        <div>\r\n            {matrix.map((row => (\r\n                <div className=\"d-flex justify-content-center\">\r\n                    {row.map(num => (\r\n                        <div className=\"p-2\" style={{width: 75}}>{display(num)}</div>\r\n                    ))}\r\n                </div>\r\n            )))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { frac, display } from './math'\r\n\r\nexport default function InputMatrix( { matrix, setMatrix } ) {\r\n    const [keys, setKeys] = React.useState([[]]);\r\n    const [rows, setRows] = React.useState(matrix.length);\r\n    const [cols, setCols] = React.useState(matrix[0].length);\r\n\r\n    React.useEffect(() => {\r\n        var newKeys = [];\r\n        var newMat = [];\r\n        for(var i = 0; i < rows; i++) {\r\n            var thisRow = [];\r\n            var thisNewMatRow = [];\r\n            for(var j = 0; j < cols; j++) {\r\n                thisRow.push(i+\",\"+j);\r\n                if(i < matrix.length && j < matrix[i].length) {\r\n                    thisNewMatRow.push(matrix[i][j]);\r\n                } else {\r\n                    thisNewMatRow.push([0,1]);\r\n                }\r\n            }\r\n            newKeys.push(thisRow)\r\n            newMat.push(thisNewMatRow);\r\n        }\r\n        setKeys(newKeys);\r\n        setMatrix(newMat);\r\n    }, [rows, cols]);\r\n\r\n    const changeRows = (event) => {\r\n        if(event.target.value != \"\") {\r\n            setRows(event.target.value)\r\n        }\r\n    }\r\n    const changeCols = (event) => {\r\n        if(event.target.value != \"\") {\r\n            setCols(event.target.value)\r\n        }\r\n    }\r\n\r\n    const updateMatrix = (event) => {\r\n        let keyArr = event.target.getAttribute(\"index\").split(\",\");\r\n        let i = parseInt(keyArr[0]);\r\n        let j = parseInt(keyArr[1]);\r\n        setMatrix((matrix) => [...matrix.slice(0, i), [...matrix[i].slice(0, j), frac(event.target.value), ...matrix[i].slice(j+1,matrix[i].length)], ...matrix.slice(i+1, matrix.length)])\r\n    }\r\n\r\n    const x = (key) => {\r\n        let keyArr = key.split(\",\");\r\n        return keyArr[0];\r\n    }\r\n    const y = (key) => {\r\n        let keyArr = key.split(\",\");\r\n        return keyArr[1];\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"p-3\"></div>\r\n            <input width=\"10\" onChange={changeRows} placeholder=\"rows\" className=\"p-2\"></input>\r\n            {\" x \"}\r\n            <input onChange={changeCols} placeholder=\"columns\" className=\"p-2\"></input>\r\n            <div className=\"p-3\"></div>\r\n            {keys.map((row => (\r\n                <div className=\"d-flex justify-content-center\">\r\n                    {row.map(key => (\r\n                        <input key={key} index={key} defaultValue={display(matrix[x(key)][y(key)])} onChange={updateMatrix} className=\"p-2\"></input>\r\n                    ))}\r\n                </div>\r\n            )))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Matrix from './Matrix';\r\nimport { frac, mult, add, display } from './math'\r\n\r\nexport default function Operation({index, operation, setOperation, updateNext}) {\r\n\r\n    React.useEffect(() => {\r\n        if(!operation.showMatrix) {\r\n            updateOperation();\r\n        }\r\n    }, [operation])\r\n\r\n    React.useEffect(() => {\r\n        updateOperation();\r\n    }, [operation.prevMatrix, operation.startRow, operation.multiplier, operation.otherRow])\r\n\r\n    const updateOperation = () => {\r\n        if(operation.type == \"scale\" && Number.isInteger(operation.startRow) && operation.multiplier != null) {\r\n            var newMatrix = [];\r\n            for(var i = 0; i < operation.prevMatrix.length; i++) {\r\n                var thisRow;\r\n                if(i == operation.startRow) {\r\n                    thisRow = [];\r\n                    for(var j = 0; j < operation.prevMatrix[i].length; j++) {\r\n                        thisRow.push(mult(operation.multiplier, operation.prevMatrix[operation.startRow][j]));\r\n                    }\r\n                } else {\r\n                    thisRow = operation.prevMatrix[i];\r\n                }\r\n                newMatrix.push(thisRow);\r\n            }\r\n            setOperation(index, {...operation, matrix: newMatrix, showMatrix: true})\r\n            updateNext(index, newMatrix);\r\n        } else if(operation.type == \"switch\" && Number.isInteger(operation.startRow) && Number.isInteger(operation.otherRow)) {\r\n            var newMatrix = [];\r\n            console.log(operation)\r\n            var row1 = JSON.parse(JSON.stringify(operation.prevMatrix[operation.startRow]));\r\n            var row2 = JSON.parse(JSON.stringify(operation.prevMatrix[operation.otherRow]));\r\n            for(var i = 0; i < operation.prevMatrix.length; i++) {\r\n                var thisRow;\r\n                if(i == operation.startRow) {\r\n                    thisRow = row2;\r\n                } else if(i == operation.otherRow) {\r\n                    thisRow = row1;\r\n                } else {\r\n                    thisRow = operation.prevMatrix[i];\r\n                }\r\n                newMatrix.push(thisRow);\r\n            }\r\n            setOperation(index, {...operation, matrix: newMatrix, showMatrix: true})\r\n            updateNext(index, newMatrix);\r\n        } else if(Number.isInteger(operation.startRow) && operation.multiplier != null && Number.isInteger(operation.otherRow)) {\r\n            var newMatrix = [];\r\n            for(var i = 0; i < operation.prevMatrix.length; i++) {\r\n                var thisRow;\r\n                if(i == operation.startRow) {\r\n                    thisRow = [];\r\n                    for(var j = 0; j < operation.prevMatrix[i].length; j++) {\r\n                        thisRow.push(add(operation.prevMatrix[operation.startRow][j], mult(operation.multiplier, operation.prevMatrix[operation.otherRow][j])));\r\n                    }\r\n                } else {\r\n                    thisRow = operation.prevMatrix[i];\r\n                }\r\n                newMatrix.push(thisRow);\r\n            }\r\n            setOperation(index, {...operation, matrix: newMatrix, showMatrix: true})\r\n            updateNext(index, newMatrix);\r\n        }\r\n    }\r\n\r\n    const changeType = (event) => {\r\n        setOperation(index, {...operation, type: event.target.value});\r\n    }\r\n\r\n    const adjustStartRow = (event) => {\r\n        let row = parseInt(event.target.value) - 1;\r\n        if(!(row < 0 || row >= operation.prevMatrix.length)) {\r\n            setOperation(index, {...operation, startRow: row});\r\n        }\r\n    }\r\n    const adjustMultiplier = (event) => {\r\n        setOperation(index, {...operation, multiplier: frac(event.target.value)});\r\n    }\r\n    const adjustOtherRow = (event) => {\r\n        let row = parseInt(event.target.value) - 1;\r\n        if(!(row < 0 || row >= operation.prevMatrix.length)) {\r\n            setOperation(index, {...operation, otherRow: row});\r\n        }\r\n    }\r\n\r\n    const inc = (row) => {\r\n        if(row == null || row === \"\") {\r\n            return \"\";\r\n        } else {\r\n            return row + 1;\r\n        }\r\n    }\r\n\r\n    var operationDetails;\r\n    if(operation.type == \"scale\") {\r\n        operationDetails = (\r\n            <span>\r\n                {\" row \"}\r\n                <input width=\"10\" placeholder=\"row #\" defaultValue={inc(operation.startRow)} onChange={adjustStartRow} className=\"p-2\"></input>\r\n                {\" *= \"}\r\n                <input defaultValue={display(operation.multiplier)} onChange={adjustMultiplier} placeholder=\"multiplier\" className=\"p-2\"></input>\r\n            </span>\r\n        )\r\n    } else if(operation.type == \"switch\") {\r\n        operationDetails = (\r\n            <span>\r\n                {\" row \"}\r\n                <input width=\"10\" placeholder=\"row #\" defaultValue={inc(operation.startRow)} onChange={adjustStartRow} className=\"p-2\"></input>\r\n                {\" <-> row \"}\r\n                <input defaultValue={inc(operation.otherRow)} onChange={adjustOtherRow} placeholder=\"row #\" className=\"p-2\"></input>\r\n            </span>\r\n        )\r\n    } else {\r\n        operationDetails = (\r\n            <span>\r\n                {\" row \"}\r\n                <input width=\"10\" defaultValue={inc(operation.startRow)} onChange={adjustStartRow} placeholder=\"row #\" className=\"p-2\"></input>\r\n                {\" += \"}\r\n                <input defaultValue={display(operation.multiplier)} onChange={adjustMultiplier} placeholder=\"multiplier\" className=\"p-2\"></input>\r\n                {\" * row \"}\r\n                <input defaultValue={inc(operation.otherRow)} onChange={adjustOtherRow} placeholder=\"row #\" className=\"p-2\"></input>\r\n            </span>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <select\r\n                onChange={changeType}\r\n                value={operation.type}\r\n                style={{width: 100}}\r\n            >\r\n                <option value=\"add\">Add</option>\r\n                <option value=\"scale\">Scale</option>\r\n                <option value=\"switch\">Switch</option>\r\n            </select>\r\n            {operationDetails}\r\n            {operation.showMatrix && <Matrix matrix={operation.matrix} />}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Operation from './Operation'\r\n\r\nexport default function Operations({operations, setOperations}) {\r\n\r\n    React.useEffect(() => {\r\n        if(operations[operations.length - 1].showMatrix) {\r\n            setOperations((oldOperations) => oldOperations.concat({prevMatrix: oldOperations[oldOperations.length - 1].matrix}))\r\n        }\r\n    }, [operations])\r\n\r\n    const updateNext = (index, newMatrix) => {\r\n        if(index < operations.length - 1) {\r\n            setOperations((oldOperations) => [...oldOperations.slice(0,index + 1), {...oldOperations[index+1], prevMatrix: newMatrix}, ...oldOperations.slice(index + 2)])\r\n        }\r\n    }\r\n\r\n    const setOperation = (index, newOperation) => {\r\n        setOperations((oldOperations) => [...oldOperations.slice(0,index), newOperation, ...oldOperations.slice(index+1, oldOperations.length)]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {operations.map((operation, index) => (\r\n                <Operation index={index} operation={operation} setOperation={setOperation} updateNext={updateNext} />\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Latex({ operations }) {\r\n    const [latex, setLatex] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        try {\r\n            var newLatex = \"\";\r\n            newLatex += getInitialMatrix(operations[0]) + \"\\n\\n\";\r\n            newLatex += \"\\\\noindent Obtain RREF:\\n\\n\"\r\n            for(var i = 0; i < operations.length - 1; i++) {\r\n                newLatex += getOpLatex(operations[i]) + \"\\n\\n\";\r\n            }\r\n            newLatex += \"\\\\noindent The augmented matrix in reduced row echelon form derived above can be written as the system of equations:\\n\\n\"\r\n            newLatex += getSystemLatex(operations[operations.length - 2]);\r\n            setLatex(newLatex);\r\n        } catch (error) {\r\n            setLatex(\"Error parsing data\")\r\n        }\r\n        \r\n    }, [operations])\r\n\r\n    const getOpLatex = (operation) => {\r\n        var opLatex = \"\\\\begin{displaymath}\\n\";\r\n        if(operation.type == \"scale\") {\r\n            opLatex += \"r_\" + (parseInt(operation.startRow) + 1) + \" \\\\rightsquigarrow \" + ldisplay(operation.multiplier) + \"r_\" + (parseInt(operation.startRow) + 1) + \"\\n\";\r\n        } else if(operation.type == \"switch\") {\r\n            opLatex += \"r_\" + (parseInt(operation.startRow) + 1)+ \" \\\\leftrightsquigarrow \" + \"r_\" + (parseInt(operation.otherRow) + 1) + \"\\n\";\r\n        } else {\r\n            opLatex += \"r_\" + (parseInt(operation.startRow) + 1) + \" \\\\rightsquigarrow r_\" + (parseInt(operation.startRow) + 1) + \" + \" + ldisplay(operation.multiplier) + \"r_\" + (parseInt(operation.otherRow) + 1) + \"\\n\";\r\n        }\r\n        opLatex += \"\\\\begin{bmatrix}\\n\";\r\n        for(var i = 0; i < operation.matrix.length; i++) {\r\n            for(var j = 0; j < operation.matrix[i].length; j++) {\r\n                if(j != operation.matrix[i].length - 1) {\r\n                    opLatex += ldisplay(operation.matrix[i][j], true) + \" & \";\r\n                } else if(i == operation.matrix.length - 1) {\r\n                    opLatex += ldisplay(operation.matrix[i][j], true) + \"\\n\";\r\n                } else {\r\n                    opLatex += ldisplay(operation.matrix[i][j], true) + \"\\\\\\\\\\n\";\r\n                }\r\n            }\r\n        }\r\n        opLatex += \"\\\\end{bmatrix}\\n\";\r\n        opLatex += \"\\\\end{displaymath}\";\r\n        return opLatex;\r\n    }\r\n\r\n    const getInitialMatrix = (operation) => {\r\n        var opLatex = \"\\\\section{}\\n\\n\";\r\n        opLatex += \"Augmented matrix:\\n\\n\";\r\n        opLatex += \"\\\\begin{displaymath}\\n\";\r\n        opLatex += \"\\\\begin{bmatrix}\\n\";\r\n        for(var i = 0; i < operation.prevMatrix.length; i++) {\r\n            for(var j = 0; j < operation.prevMatrix[i].length; j++) {\r\n                if(j != operation.prevMatrix[i].length - 1) {\r\n                    opLatex += ldisplay(operation.prevMatrix[i][j], true) + \" & \";\r\n                } else if(i == operation.prevMatrix.length - 1) {\r\n                    opLatex += ldisplay(operation.prevMatrix[i][j], true) + \"\\n\";\r\n                } else {\r\n                    opLatex += ldisplay(operation.prevMatrix[i][j], true) + \"\\\\\\\\\\n\";\r\n                }\r\n            }\r\n        }\r\n        opLatex += \"\\\\end{bmatrix}\\n\";\r\n        opLatex += \"\\\\end{displaymath}\";\r\n        return opLatex;\r\n    }\r\n\r\n    const getSystemLatex = (operation) => {\r\n        var opLatex = \"\";\r\n        opLatex += \"\\\\begin{displaymath}\\n\";\r\n        opLatex += \"\\\\systeme{\\n\";\r\n        for(var i = 0; i < operation.matrix.length; i++) {\r\n            var first = true;\r\n            for(var j = 0; j < operation.matrix[i].length; j++) {\r\n                if(j == operation.matrix[i].length - 1) {\r\n                    if(i == operation.matrix.length - 1) {\r\n                        opLatex += \" = \" + ldisplay(operation.matrix[i][j], true) + \"\\n\";\r\n                    } else {\r\n                        opLatex += \" = \" + ldisplay(operation.matrix[i][j], true) + \",\\n\";\r\n                    }\r\n                } else if(operation.matrix[i][j][0] != 0) {\r\n                    if(first) {\r\n                        opLatex += ldisplay(operation.matrix[i][j]) + \"x_\" + (j + 1);\r\n                        first = false;\r\n                    } else {\r\n                        opLatex += \" + \" + ldisplay(operation.matrix[i][j]) + \"x_\" + (j + 1);\r\n                    }\r\n                } else if(j == operation.matrix.length - 2 && first) {\r\n                    opLatex += ldisplay(operation.matrix[i][j]);\r\n                }\r\n            }\r\n        }\r\n        opLatex += \"}\\n\";\r\n        opLatex += \"\\\\end{displaymath}\";\r\n        return opLatex;\r\n    }\r\n\r\n    const ldisplay = (frac, display1=false) => {\r\n        if(frac.length > 2) {\r\n            if(frac[0] == 0) {\r\n                return ldisplay(frac[2][0], false) + frac[2][1];\r\n            } else {\r\n                return ldisplay(frac.slice(0,2), true) + \" + \" + ldisplay(frac[2][0], false) + frac[2][1];\r\n            }\r\n        }\r\n        if(!display1 && frac[1] == 1 && frac[0] == 1) {\r\n            return \"\";\r\n        } else if(!display1 && frac[1] == 1 && frac[0] == -1) {\r\n            return \"-\";\r\n        } else if(frac[1] == 1) {\r\n            return frac[0];\r\n        } else {\r\n            return \"\\\\frac{\" + frac[0] + \"}{\" + frac[1] + \"}\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card mt-4\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">LaTeX</h5>\r\n                <p className=\"card-text\" style={{ whiteSpace: \"pre\", textAlign: \"left\" }}>\r\n                    {latex}\r\n                </p>\r\n                <button className=\"btn btn-info me-3\" onClick={() => {navigator.clipboard.writeText(latex)}}>Copy to clipboard</button>\r\n                <a href=\"https://www.overleaf.com/\" target=\"_blank\" className=\"btn btn-primary\">Overleaf</a>\r\n                <p className=\"card-text\" style={{ whiteSpace: \"pre\", textAlign: \"left\" }}>\r\n                    {\"Remember to add:\\n\\\\usepackage{amsmath}\\n\\\\usepackage{amssymb}\\n\\\\usepackage{systeme}}\"}\r\n                </p>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","export const matrixPersistenceKey = \"matrix_persistent_storage\";\r\nexport const operationsPersistenceKey = \"operations_persistent_storage\";\r\nexport const firstOperationsState = [{prevMatrix: [[[0,1],[0,1],[0,1]],[[0,1],[0,1],[0,1]],[[0,1],[0,1],[0,1]]]}];\r\nexport const firstMatrixState = [[[0,1],[0,1],[0,1]],[[0,1],[0,1],[0,1]],[[0,1],[0,1],[0,1]]];\r\n\r\nexport const getOperations = () => {\r\n    const operationsFromStorage = localStorage.getItem(operationsPersistenceKey);\r\n    const operationsObject = JSON.parse(operationsFromStorage);\r\n    const operations = operationsFromStorage === null ? firstOperationsState : operationsObject;\r\n\r\n    return operations;\r\n}\r\n\r\nexport const getMatrix = () => {\r\n    const matrixFromStorage = localStorage.getItem(matrixPersistenceKey);\r\n    const matrixObject = JSON.parse(matrixFromStorage);\r\n    const matrix = matrixFromStorage === null ? firstMatrixState : matrixObject;\r\n\r\n    return matrix;\r\n}","import './App.css';\nimport React from \"react\";\nimport Matrix from './Matrix';\nimport InputMatrix from './InputMatrix';\nimport Operations from './Operations';\nimport Latex from './Latex';\nimport { getOperations, getMatrix, matrixPersistenceKey, operationsPersistenceKey, firstMatrixState, firstOperationsState } from './State';\n\n\nfunction App() {\n    const [matrix, setMatrix] = React.useState(getMatrix());\n    const [operations, setOperations] = React.useState(getOperations());\n\n    React.useEffect(() => {\n        if(operations.length > 1) {\n            setOperations((oldOperations) => [{...oldOperations[0], prevMatrix: matrix}, ...oldOperations.slice(1)]);\n        } else {\n            setOperations((oldOperations) => [{...oldOperations[0], prevMatrix: matrix}]);\n        }\n    }, [matrix])\n\n    React.useEffect(() => {\n        localStorage.setItem(matrixPersistenceKey, JSON.stringify(matrix));\n    }, [matrix]);\n\n    React.useEffect(() => {\n        localStorage.setItem(operationsPersistenceKey, JSON.stringify(operations));\n    }, [operations]);\n\n    const reset = () => {\n        setMatrix(firstMatrixState);\n        setOperations(firstOperationsState);\n        window.location.reload();\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"mt-4\">\n                All changes are saved in local storage.\n                <button className=\"btn btn-secondary btn-sm ms-3\" onClick={reset}>\n                    Reset\n                </button>\n            </div>\n            <InputMatrix matrix={matrix} setMatrix={setMatrix}/>\n            <Matrix matrix={matrix} />\n            <Operations operations={operations} setOperations={setOperations}/>\n            <Latex operations={operations} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}