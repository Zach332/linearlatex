{"version":3,"sources":["math.js","Matrix.js","InputMatrix.js","Operation.js","Operations.js","Latex.js","State.js","App.js","reportWebVitals.js","index.js"],"names":["frac","input","isLetter","slice","variable","length","parts","split","parseInt","includes","index","indexOf","mult","i1","i2","newFrac","i","push","simplify","add","usedVars","curVar","other","getVar","varName","display","display1","min","Math","abs","char","match","Matrix","matrix","map","row","className","num","style","width","InputMatrix","setMatrix","React","useState","keys","setKeys","rows","setRows","cols","setCols","useEffect","newKeys","newMat","thisRow","thisNewMatRow","j","updateMatrix","event","keyArr","target","getAttribute","value","x","key","y","onChange","placeholder","defaultValue","Operation","operation","setOperation","updateNext","showMatrix","updateOperation","prevMatrix","startRow","multiplier","otherRow","operationDetails","type","Number","isInteger","newMatrix","console","log","row1","JSON","parse","stringify","row2","adjustStartRow","adjustMultiplier","adjustOtherRow","inc","Operations","operations","setOperations","oldOperations","concat","newOperation","Latex","latex","setLatex","newLatex","getInitialMatrix","getOpLatex","getSystemLatex","error","opLatex","ldisplay","first","whiteSpace","textAlign","onClick","navigator","clipboard","writeText","href","matrixPersistenceKey","operationsPersistenceKey","firstOperationsState","firstMatrixState","App","matrixFromStorage","localStorage","getItem","matrixObject","getMatrix","operationsFromStorage","operationsObject","getOperations","setItem","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.272c0c7a.chunk.js","sourcesContent":["export const frac = (input) => {\r\n    if(isLetter(input.slice(-1))) {\r\n        var variable = input.slice(-1);\r\n        if(input.length == 1) {\r\n            return [0, 1, [[1, 1], variable]];\r\n        }\r\n        var parts = input.slice(0,input.length - 1).split(\"/\");\r\n        var num = parseInt(parts[0]);\r\n        var den = parts.length > 1?parseInt(parts[1]):1;\r\n        return [0, 1, [[num,den], variable]];\r\n    } else if (input.length > 2 && input.includes(\"_\")) {\r\n        var index = input.indexOf(\"_\");\r\n        var variable = input.slice(index-1);\r\n        if(index == 1) {\r\n            return [0, 1, [[1, 1], variable]];\r\n        }\r\n        var parts = input.slice(0,input.length - index - 1).split(\"/\");\r\n        var num = parseInt(parts[0]);\r\n        var den = parts.length > 1?parseInt(parts[1]):1;\r\n        return [0, 1, [[num,den], variable]];\r\n    }\r\n    if(input == \"\")return [0,1];\r\n    var parts = input.split(\"/\");\r\n    var num = parseInt(parts[0]);\r\n    var den = parts.length > 1?parseInt(parts[1]):1;\r\n    return [num, den];\r\n}\r\n\r\nexport const mult = (i1, i2) => {\r\n    if(i1.length > 2) {\r\n        var newFrac = [i1[0] * i2[0], i1[1] * i2[1]];\r\n        for(var i = 2; i < i1.length; i++) {\r\n            newFrac.push([[i1[i][0][0] * i2[0], i1[i][0][1] * i2[1]], i1[i][1]]);\r\n        }\r\n        return simplify(newFrac);\r\n    } else if (i2.length > 2) {\r\n        var newFrac = [i1[0] * i2[0], i1[1] * i2[1]]\r\n        for(var i = 2; i < i2.length; i++) {\r\n            newFrac.push([[i2[i][0][0] * i1[0], i2[i][0][1] * i1[1]], i2[i][1]]);\r\n        }\r\n        return simplify(newFrac);\r\n    }\r\n    var newFrac = [i1[0] * i2[0], i1[1] * i2[1]];\r\n    return simplify(newFrac);\r\n}\r\n\r\nexport const add = (i1, i2) => {\r\n    var newFrac = [(i1[0] * i2[1]) + (i2[0] * i1[1]), i1[1] * i2[1]];\r\n    var usedVars = [];\r\n    for(var i = 2; i < i1.length; i++) {\r\n        var curVar = i1[i][1];\r\n        usedVars.push(curVar);\r\n        var other = getVar(i2, curVar);\r\n        if(other === null) {\r\n            newFrac.push([[i1[i][0][0], i1[i][0][1]], curVar]);\r\n        } else {\r\n            newFrac.push([[(i1[i][0][0] * other[0][1]) + (i1[i][0][1] * other[0][0]), i1[i][0][1] * other[0][1]], curVar]);\r\n        }\r\n    }\r\n    for(var i = 2; i < i2.length; i++) {\r\n        var curVar = i2[i][1];\r\n        if(usedVars.includes(curVar)) {\r\n            continue;\r\n        }\r\n        var other = getVar(i1, curVar);\r\n        if(other === null) {\r\n            newFrac.push([[i2[i][0][0], i2[i][0][1]], curVar]);\r\n        } else {\r\n            newFrac.push([[(i2[i][0][0] * other[0][1]) + (i2[i][0][1] * other[0][0]), i2[i][0][1] * other[0][1]], curVar]);\r\n        }\r\n    }\r\n    return simplify(newFrac);\r\n}\r\n\r\nconst getVar = (frac, varName) => {\r\n    for(var i = 2; i < frac.length; i++) {\r\n        if(frac[i][1] == varName) {\r\n            return frac[i];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const display = (frac, display1=true) => {\r\n    if(frac == null)return \"\";\r\n    if(frac.length == 3) {\r\n        if(frac[0] == 0) {\r\n            return display(frac[2][0], false) + frac[2][1];\r\n        } else {\r\n            return display(frac.slice(0,2)) + \" + \" + display(frac[2][0], false) + frac[2][1];\r\n        }\r\n    }\r\n    if(frac.length > 3) {\r\n        return display(frac[frac.length-1][0], false) + frac[frac.length-1][1] + \" + \" + display(frac.slice(0,frac.length - 1))\r\n    }\r\n    if(!display1 && frac[1] == 1 && frac[0] == 1) {\r\n        return \"\";\r\n    } else if(!display1 && frac[1] == 1 && frac[0] == -1) {\r\n        return \"-\";\r\n    }\r\n    if(frac[1] == 1) {\r\n        return frac[0];\r\n    } else {\r\n        return frac[0] + \"/\" + frac[1];\r\n    }\r\n}\r\n\r\nconst simplify = (frac) => {\r\n    if(frac[0] == 0) {\r\n        frac[1] = 1;\r\n    }\r\n    var min = Math.min(Math.abs(frac[0]), Math.abs(frac[1]));\r\n    for(var i = 2; i <= min; i++) {\r\n        if((frac[0] / i) % 1 == 0 && (frac[1] / i) % 1 == 0) {\r\n            frac[0] /= i;\r\n            frac[1] /= i;\r\n            i--;\r\n        }\r\n    }\r\n    for(var index = 2; index < frac.length; index++) {\r\n        if(frac[index][0][0] == 0) {\r\n            frac[index][0][1] = 1;\r\n        }\r\n        var min = Math.min(Math.abs(frac[index][0][0]), Math.abs(frac[index][0][1]));\r\n        for(var i = 2; i <= min; i++) {\r\n            if((frac[index][0][0] / i) % 1 == 0 && (frac[index][0][1] / i) % 1 == 0) {\r\n                frac[index][0][0] /= i;\r\n                frac[index][0][1] /= i;\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n    return frac;\r\n}\r\n\r\nconst isLetter = (char) => {\r\n    return char.match(/[a-z]/i);\r\n}","import React from 'react'\r\nimport { display } from './math'\r\n\r\nexport default function Matrix( { matrix }) {\r\n    return (\r\n        <div>\r\n            {matrix.map((row => (\r\n                <div className=\"d-flex justify-content-center\">\r\n                    {row.map(num => (\r\n                        <div className=\"p-2\" style={{width: 75}}>{display(num)}</div>\r\n                    ))}\r\n                </div>\r\n            )))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { frac, display } from './math'\r\n\r\nexport default function InputMatrix( { matrix, setMatrix } ) {\r\n    const [keys, setKeys] = React.useState([[]]);\r\n    const [rows, setRows] = React.useState(matrix.length);\r\n    const [cols, setCols] = React.useState(matrix[0].length);\r\n\r\n    React.useEffect(() => {\r\n        var newKeys = [];\r\n        var newMat = [];\r\n        for(var i = 0; i < rows; i++) {\r\n            var thisRow = [];\r\n            var thisNewMatRow = [];\r\n            for(var j = 0; j < cols; j++) {\r\n                thisRow.push(i+\",\"+j);\r\n                if(i < matrix.length && j < matrix[i].length) {\r\n                    thisNewMatRow.push(matrix[i][j]);\r\n                } else {\r\n                    thisNewMatRow.push([0,1]);\r\n                }\r\n            }\r\n            newKeys.push(thisRow)\r\n            newMat.push(thisNewMatRow);\r\n        }\r\n        setKeys(newKeys);\r\n        setMatrix(newMat);\r\n    }, [rows, cols]);\r\n\r\n    const changeRows = (event) => {\r\n        if(event.target.value != \"\") {\r\n            setRows(event.target.value)\r\n        }\r\n    }\r\n    const changeCols = (event) => {\r\n        if(event.target.value != \"\") {\r\n            setCols(event.target.value)\r\n        }\r\n    }\r\n\r\n    const updateMatrix = (event) => {\r\n        let keyArr = event.target.getAttribute(\"index\").split(\",\");\r\n        let i = parseInt(keyArr[0]);\r\n        let j = parseInt(keyArr[1]);\r\n        setMatrix((matrix) => [...matrix.slice(0, i), [...matrix[i].slice(0, j), frac(event.target.value), ...matrix[i].slice(j+1,matrix[i].length)], ...matrix.slice(i+1, matrix.length)])\r\n    }\r\n\r\n    const x = (key) => {\r\n        let keyArr = key.split(\",\");\r\n        return keyArr[0];\r\n    }\r\n    const y = (key) => {\r\n        let keyArr = key.split(\",\");\r\n        return keyArr[1];\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"p-3\"></div>\r\n            <input width=\"10\" onChange={changeRows} placeholder=\"rows\" className=\"p-2\"></input>\r\n            {\" x \"}\r\n            <input onChange={changeCols} placeholder=\"columns\" className=\"p-2\"></input>\r\n            <div className=\"p-3\"></div>\r\n            {keys.map((row => (\r\n                <div className=\"d-flex justify-content-center\">\r\n                    {row.map(key => (\r\n                        <input key={key} index={key} defaultValue={display(matrix[x(key)][y(key)])} onChange={updateMatrix} className=\"p-2\"></input>\r\n                    ))}\r\n                </div>\r\n            )))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Matrix from './Matrix';\r\nimport { frac, mult, add, display } from './math'\r\n\r\nexport default function Operation({index, operation, setOperation, updateNext}) {\r\n\r\n    React.useEffect(() => {\r\n        if(!operation.showMatrix) {\r\n            updateOperation();\r\n        }\r\n    }, [operation])\r\n\r\n    React.useEffect(() => {\r\n        updateOperation();\r\n    }, [operation.prevMatrix, operation.startRow, operation.multiplier, operation.otherRow])\r\n\r\n    const updateOperation = () => {\r\n        if(operation.type == \"scale\" && Number.isInteger(operation.startRow) && operation.multiplier != null) {\r\n            var newMatrix = [];\r\n            for(var i = 0; i < operation.prevMatrix.length; i++) {\r\n                var thisRow;\r\n                if(i == operation.startRow) {\r\n                    thisRow = [];\r\n                    for(var j = 0; j < operation.prevMatrix[i].length; j++) {\r\n                        thisRow.push(mult(operation.multiplier, operation.prevMatrix[operation.startRow][j]));\r\n                    }\r\n                } else {\r\n                    thisRow = operation.prevMatrix[i];\r\n                }\r\n                newMatrix.push(thisRow);\r\n            }\r\n            setOperation(index, {...operation, matrix: newMatrix, showMatrix: true})\r\n            updateNext(index, newMatrix);\r\n        } else if(operation.type == \"switch\" && Number.isInteger(operation.startRow) && Number.isInteger(operation.otherRow)) {\r\n            var newMatrix = [];\r\n            console.log(operation)\r\n            var row1 = JSON.parse(JSON.stringify(operation.prevMatrix[operation.startRow]));\r\n            var row2 = JSON.parse(JSON.stringify(operation.prevMatrix[operation.otherRow]));\r\n            for(var i = 0; i < operation.prevMatrix.length; i++) {\r\n                var thisRow;\r\n                if(i == operation.startRow) {\r\n                    thisRow = row2;\r\n                } else if(i == operation.otherRow) {\r\n                    thisRow = row1;\r\n                } else {\r\n                    thisRow = operation.prevMatrix[i];\r\n                }\r\n                newMatrix.push(thisRow);\r\n            }\r\n            setOperation(index, {...operation, matrix: newMatrix, showMatrix: true})\r\n            updateNext(index, newMatrix);\r\n        } else if(Number.isInteger(operation.startRow) && operation.multiplier != null && Number.isInteger(operation.otherRow)) {\r\n            var newMatrix = [];\r\n            for(var i = 0; i < operation.prevMatrix.length; i++) {\r\n                var thisRow;\r\n                if(i == operation.startRow) {\r\n                    thisRow = [];\r\n                    for(var j = 0; j < operation.prevMatrix[i].length; j++) {\r\n                        thisRow.push(add(operation.prevMatrix[operation.startRow][j], mult(operation.multiplier, operation.prevMatrix[operation.otherRow][j])));\r\n                    }\r\n                } else {\r\n                    thisRow = operation.prevMatrix[i];\r\n                }\r\n                newMatrix.push(thisRow);\r\n            }\r\n            setOperation(index, {...operation, matrix: newMatrix, showMatrix: true})\r\n            updateNext(index, newMatrix);\r\n        }\r\n    }\r\n\r\n    const changeType = (event) => {\r\n        setOperation(index, {...operation, type: event.target.value});\r\n    }\r\n\r\n    const adjustStartRow = (event) => {\r\n        let row = parseInt(event.target.value) - 1;\r\n        if(!(row < 0 || row >= operation.prevMatrix.length)) {\r\n            setOperation(index, {...operation, startRow: row});\r\n        }\r\n    }\r\n    const adjustMultiplier = (event) => {\r\n        setOperation(index, {...operation, multiplier: frac(event.target.value)});\r\n    }\r\n    const adjustOtherRow = (event) => {\r\n        let row = parseInt(event.target.value) - 1;\r\n        if(!(row < 0 || row >= operation.prevMatrix.length)) {\r\n            setOperation(index, {...operation, otherRow: row});\r\n        }\r\n    }\r\n\r\n    const inc = (row) => {\r\n        if(row == null || row === \"\") {\r\n            return \"\";\r\n        } else {\r\n            return row + 1;\r\n        }\r\n    }\r\n\r\n    var operationDetails;\r\n    if(operation.type == \"scale\") {\r\n        operationDetails = (\r\n            <span>\r\n                {\" row \"}\r\n                <input width=\"10\" placeholder=\"row #\" defaultValue={inc(operation.startRow)} onChange={adjustStartRow} className=\"p-2\"></input>\r\n                {\" *= \"}\r\n                <input defaultValue={display(operation.multiplier)} onChange={adjustMultiplier} placeholder=\"multiplier\" className=\"p-2\"></input>\r\n            </span>\r\n        )\r\n    } else if(operation.type == \"switch\") {\r\n        operationDetails = (\r\n            <span>\r\n                {\" row \"}\r\n                <input width=\"10\" placeholder=\"row #\" defaultValue={inc(operation.startRow)} onChange={adjustStartRow} className=\"p-2\"></input>\r\n                {\" <-> row \"}\r\n                <input defaultValue={inc(operation.otherRow)} onChange={adjustOtherRow} placeholder=\"row #\" className=\"p-2\"></input>\r\n            </span>\r\n        )\r\n    } else {\r\n        operationDetails = (\r\n            <span>\r\n                {\" row \"}\r\n                <input width=\"10\" defaultValue={inc(operation.startRow)} onChange={adjustStartRow} placeholder=\"row #\" className=\"p-2\"></input>\r\n                {\" += \"}\r\n                <input defaultValue={display(operation.multiplier)} onChange={adjustMultiplier} placeholder=\"multiplier\" className=\"p-2\"></input>\r\n                {\" * row \"}\r\n                <input defaultValue={inc(operation.otherRow)} onChange={adjustOtherRow} placeholder=\"row #\" className=\"p-2\"></input>\r\n            </span>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <select\r\n                onChange={changeType}\r\n                value={operation.type}\r\n                style={{width: 100}}\r\n            >\r\n                <option value=\"add\">Add</option>\r\n                <option value=\"scale\">Scale</option>\r\n                <option value=\"switch\">Switch</option>\r\n            </select>\r\n            {operationDetails}\r\n            {operation.showMatrix && <Matrix matrix={operation.matrix} />}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Operation from './Operation'\r\n\r\nexport default function Operations({operations, setOperations}) {\r\n\r\n    React.useEffect(() => {\r\n        if(operations[operations.length - 1].showMatrix) {\r\n            setOperations((oldOperations) => oldOperations.concat({prevMatrix: oldOperations[oldOperations.length - 1].matrix}))\r\n        }\r\n    }, [operations])\r\n\r\n    const updateNext = (index, newMatrix) => {\r\n        if(index < operations.length - 1) {\r\n            setOperations((oldOperations) => [...oldOperations.slice(0,index + 1), {...oldOperations[index+1], prevMatrix: newMatrix}, ...oldOperations.slice(index + 2)])\r\n        }\r\n    }\r\n\r\n    const setOperation = (index, newOperation) => {\r\n        setOperations((oldOperations) => [...oldOperations.slice(0,index), newOperation, ...oldOperations.slice(index+1, oldOperations.length)]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {operations.map((operation, index) => (\r\n                <Operation index={index} operation={operation} setOperation={setOperation} updateNext={updateNext} />\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Latex({ operations }) {\r\n    const [latex, setLatex] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        try {\r\n            var newLatex = \"\";\r\n            newLatex += getInitialMatrix(operations[0]) + \"\\n\\n\";\r\n            newLatex += \"\\\\noindent Reduce:\\n\\n\"\r\n            for(var i = 0; i < operations.length - 1; i++) {\r\n                newLatex += getOpLatex(operations[i]) + \"\\n\\n\";\r\n            }\r\n            newLatex += \"\\\\noindent The augmented matrix derived above can be written as the system of equations:\\n\\n\"\r\n            newLatex += getSystemLatex(operations[operations.length - 2]);\r\n            setLatex(newLatex);\r\n        } catch (error) {\r\n            setLatex(\"Error parsing data\")\r\n        }\r\n        \r\n    }, [operations])\r\n\r\n    const getOpLatex = (operation) => {\r\n        var opLatex = \"\\\\begin{displaymath}\\n\";\r\n        if(operation.type == \"scale\") {\r\n            opLatex += \"r_\" + (parseInt(operation.startRow) + 1) + \" \\\\rightsquigarrow \" + ldisplay(operation.multiplier) + \"r_\" + (parseInt(operation.startRow) + 1) + \"\\n\";\r\n        } else if(operation.type == \"switch\") {\r\n            opLatex += \"r_\" + (parseInt(operation.startRow) + 1)+ \" \\\\leftrightsquigarrow \" + \"r_\" + (parseInt(operation.otherRow) + 1) + \"\\n\";\r\n        } else {\r\n            opLatex += \"r_\" + (parseInt(operation.startRow) + 1) + \" \\\\rightsquigarrow r_\" + (parseInt(operation.startRow) + 1) + \" + \" + ldisplay(operation.multiplier) + \"r_\" + (parseInt(operation.otherRow) + 1) + \"\\n\";\r\n        }\r\n        opLatex += \"\\\\begin{bmatrix}\\n\";\r\n        for(var i = 0; i < operation.matrix.length; i++) {\r\n            for(var j = 0; j < operation.matrix[i].length; j++) {\r\n                if(j != operation.matrix[i].length - 1) {\r\n                    opLatex += ldisplay(operation.matrix[i][j], true) + \" & \";\r\n                } else if(i == operation.matrix.length - 1) {\r\n                    opLatex += ldisplay(operation.matrix[i][j], true) + \"\\n\";\r\n                } else {\r\n                    opLatex += ldisplay(operation.matrix[i][j], true) + \"\\\\\\\\\\n\";\r\n                }\r\n            }\r\n        }\r\n        opLatex += \"\\\\end{bmatrix}\\n\";\r\n        opLatex += \"\\\\end{displaymath}\";\r\n        return opLatex;\r\n    }\r\n\r\n    const getInitialMatrix = (operation) => {\r\n        var opLatex = \"\\\\section{}\\n\\n\";\r\n        opLatex += \"Augmented matrix:\\n\\n\";\r\n        opLatex += \"\\\\begin{displaymath}\\n\";\r\n        opLatex += \"\\\\begin{bmatrix}\\n\";\r\n        for(var i = 0; i < operation.prevMatrix.length; i++) {\r\n            for(var j = 0; j < operation.prevMatrix[i].length; j++) {\r\n                if(j != operation.prevMatrix[i].length - 1) {\r\n                    opLatex += ldisplay(operation.prevMatrix[i][j], true) + \" & \";\r\n                } else if(i == operation.prevMatrix.length - 1) {\r\n                    opLatex += ldisplay(operation.prevMatrix[i][j], true) + \"\\n\";\r\n                } else {\r\n                    opLatex += ldisplay(operation.prevMatrix[i][j], true) + \"\\\\\\\\\\n\";\r\n                }\r\n            }\r\n        }\r\n        opLatex += \"\\\\end{bmatrix}\\n\";\r\n        opLatex += \"\\\\end{displaymath}\";\r\n        return opLatex;\r\n    }\r\n\r\n    const getSystemLatex = (operation) => {\r\n        var opLatex = \"\";\r\n        opLatex += \"\\\\begin{displaymath}\\n\";\r\n        opLatex += \"\\\\systeme{\\n\";\r\n        for(var i = 0; i < operation.matrix.length; i++) {\r\n            var first = true;\r\n            for(var j = 0; j < operation.matrix[i].length; j++) {\r\n                if(j == operation.matrix[i].length - 1) {\r\n                    if(i == operation.matrix.length - 1) {\r\n                        opLatex += \" = \" + ldisplay(operation.matrix[i][j], true) + \"\\n\";\r\n                    } else {\r\n                        opLatex += \" = \" + ldisplay(operation.matrix[i][j], true) + \",\\n\";\r\n                    }\r\n                } else if(operation.matrix[i][j][0] != 0) {\r\n                    if(first) {\r\n                        opLatex += ldisplay(operation.matrix[i][j]) + \"x_\" + (j + 1);\r\n                        first = false;\r\n                    } else {\r\n                        opLatex += \" + \" + ldisplay(operation.matrix[i][j]) + \"x_\" + (j + 1);\r\n                    }\r\n                } else if(j == operation.matrix.length[i] - 2 && first) {\r\n                    opLatex += ldisplay(operation.matrix[i][j]);\r\n                }\r\n            }\r\n        }\r\n        opLatex += \"}\\n\";\r\n        opLatex += \"\\\\end{displaymath}\";\r\n        return opLatex;\r\n    }\r\n\r\n    const ldisplay = (frac, display1=false) => {\r\n        if(frac.length == 3) {\r\n            if(frac[0] == 0) {\r\n                return ldisplay(frac[2][0], false) + frac[2][1];\r\n            } else {\r\n                return ldisplay(frac.slice(0,2), true) + \" + \" + ldisplay(frac[2][0], false) + frac[2][1];\r\n            }\r\n        }\r\n        if(frac.length > 3) {\r\n            return ldisplay(frac[frac.length-1][0], false) + frac[frac.length-1][1] + \" + \" + ldisplay(frac.slice(0,frac.length - 1), display1)\r\n        }\r\n        if(!display1 && frac[1] == 1 && frac[0] == 1) {\r\n            return \"\";\r\n        } else if(!display1 && frac[1] == 1 && frac[0] == -1) {\r\n            return \"-\";\r\n        } else if(frac[1] == 1) {\r\n            return frac[0];\r\n        } else {\r\n            return \"\\\\frac{\" + frac[0] + \"}{\" + frac[1] + \"}\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card mt-4\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">LaTeX</h5>\r\n                <p className=\"card-text\" style={{ whiteSpace: \"pre\", textAlign: \"left\" }}>\r\n                    {latex}\r\n                </p>\r\n                <button className=\"btn btn-info me-3\" onClick={() => {navigator.clipboard.writeText(latex)}}>Copy to clipboard</button>\r\n                <a href=\"https://www.overleaf.com/\" target=\"_blank\" className=\"btn btn-primary\">Overleaf</a>\r\n                <p className=\"card-text\" style={{ whiteSpace: \"pre\", textAlign: \"left\" }}>\r\n                    {\"Remember to add:\\n\\\\usepackage{amsmath}\\n\\\\usepackage{amssymb}\\n\\\\usepackage{systeme}\"}\r\n                </p>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","export const matrixPersistenceKey = \"matrix_persistent_storage\";\r\nexport const operationsPersistenceKey = \"operations_persistent_storage\";\r\nexport const firstOperationsState = [{prevMatrix: [[[0,1],[0,1],[0,1]],[[0,1],[0,1],[0,1]],[[0,1],[0,1],[0,1]]]}];\r\nexport const firstMatrixState = [[[0,1],[0,1],[0,1]],[[0,1],[0,1],[0,1]],[[0,1],[0,1],[0,1]]];\r\n\r\nexport const getOperations = () => {\r\n    const operationsFromStorage = localStorage.getItem(operationsPersistenceKey);\r\n    const operationsObject = JSON.parse(operationsFromStorage);\r\n    const operations = operationsFromStorage === null ? firstOperationsState : operationsObject;\r\n\r\n    return operations;\r\n}\r\n\r\nexport const getMatrix = () => {\r\n    const matrixFromStorage = localStorage.getItem(matrixPersistenceKey);\r\n    const matrixObject = JSON.parse(matrixFromStorage);\r\n    const matrix = matrixFromStorage === null ? firstMatrixState : matrixObject;\r\n\r\n    return matrix;\r\n}","import './App.css';\nimport React from \"react\";\nimport Matrix from './Matrix';\nimport InputMatrix from './InputMatrix';\nimport Operations from './Operations';\nimport Latex from './Latex';\nimport { getOperations, getMatrix, matrixPersistenceKey, operationsPersistenceKey, firstMatrixState, firstOperationsState } from './State';\n\n\nfunction App() {\n    const [matrix, setMatrix] = React.useState(getMatrix());\n    const [operations, setOperations] = React.useState(getOperations());\n\n    React.useEffect(() => {\n        if(operations.length > 1) {\n            setOperations((oldOperations) => [{...oldOperations[0], prevMatrix: matrix}, ...oldOperations.slice(1)]);\n        } else {\n            setOperations((oldOperations) => [{...oldOperations[0], prevMatrix: matrix}]);\n        }\n    }, [matrix])\n\n    React.useEffect(() => {\n        localStorage.setItem(matrixPersistenceKey, JSON.stringify(matrix));\n    }, [matrix]);\n\n    React.useEffect(() => {\n        localStorage.setItem(operationsPersistenceKey, JSON.stringify(operations));\n    }, [operations]);\n\n    const reset = () => {\n        setMatrix(firstMatrixState);\n        setOperations(firstOperationsState);\n        window.location.reload();\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"mt-4\">\n                All changes are saved in local storage.\n                <button className=\"btn btn-secondary btn-sm ms-3\" onClick={reset}>\n                    Reset\n                </button>\n            </div>\n            <InputMatrix matrix={matrix} setMatrix={setMatrix}/>\n            <Matrix matrix={matrix} />\n            <Operations operations={operations} setOperations={setOperations}/>\n            <Latex operations={operations} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}